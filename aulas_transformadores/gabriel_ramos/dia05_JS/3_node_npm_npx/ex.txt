1) Conceitualmente, o que é o Node, o NPM e o NPX?

RESPOSTA: Node é a plataforma que executa JavaScript (utilizando V8, motor do Google Chrome) no lado do back-end.
NPM é o gerenciador de pacotes do Node, responsável por fazer instalação de pacotes através de comandos, e só executa pacotes instalados globalmente
ou inseridos no objeto "scripts" no package.json.
Já o NPX é o executor de pacotes do NPM, verificar se o pacote existe nas variáveis ($PATH) ou nos binários locais do projeto e executa-o. 
Também permite executar um pacote que não foi instalado. 

 
2) Como iniciar um projeto utilizando NPM?

RESPOSTA:
npm init
ou
npm init -y # já preenche algumas informações

3) Qual a diferença entre dependências que estão listadas como dependencies e devDependencies em um arquivo package.json?

RESPOSTA: Ambas estão relacionadas ao ambiente do projeto: devDependencies são dependências que estão ligadas ao ambiente de desenvolvimento 
(como ferramentas de teste, análise de código e qualidade) e já as dependencies são ferramentas necessárias para o projeto ser executado 
em um ambiente final (como produção). As devDependencies não serão instaladas quando o projeto for instalado em outro ambiente. 

4) Como criar uma rotina customizada usando npm?

RESPOSTA: Acessando o arquivo package.json, criando uma chave dentro do objeto de scripts e executando com npm 
(para scripts padrões como start, test, install) ou npm run (para scripts customizados).